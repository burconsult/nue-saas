---
title: Sign Up
description: Create your Nue SAAS account and start building your application today with our free trial.
layout: main
---

<section class="py-2xl min-h-screen flex items-center">
  <div class="container">
    <div class="max-w-md mx-auto">
      <!-- Header -->
      <div class="text-center mb-xl">
        <h1 class="mb-sm">Create Your Account</h1>
        <p class="text-neutral-600">
          Start your journey with Nue SAAS today
        </p>
      </div>

      <!-- Plan Selection (if from pricing) -->
      <div class="card mb-lg" :if="selectedPlan">
        <div class="card-body">
          <div class="flex items-center justify-between">
            <div>
              <h3 class="font-semibold text-lg">{selectedPlan.name} Plan</h3>
              <p class="text-neutral-600">{selectedPlan.description}</p>
            </div>
            <div class="text-right">
              <div class="text-2xl font-bold text-primary-600">
                {selectedPlan.price}
                <span class="text-sm text-neutral-600 font-normal" :if="selectedPlan.price !== 'Custom'">
                  /month
                </span>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Signup Form Card -->
      <div class="card">
        <div class="card-body">
          <!-- Social Signup -->
          <div class="space-y-sm mb-lg">
            <button class="btn btn-outline btn-full flex items-center justify-center gap-sm" @click="signupWithGoogle">
              <svg width="18" height="18" viewBox="0 0 24 24">
                <path fill="#4285F4" d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z"/>
                <path fill="#34A853" d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z"/>
                <path fill="#FBBC05" d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z"/>
                <path fill="#EA4335" d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z"/>
              </svg>
              Continue with Google
            </button>
            
            <button class="btn btn-outline btn-full flex items-center justify-center gap-sm" @click="signupWithGitHub">
              <svg width="18" height="18" viewBox="0 0 24 24" fill="currentColor">
                <path d="M12 2C6.477 2 2 6.484 2 12.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0112 6.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.202 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.943.359.309.678.92.678 1.855 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0022 12.017C22 6.484 17.522 2 12 2z"/>
              </svg>
              Continue with GitHub
            </button>
          </div>

          <!-- Divider -->
          <div class="relative mb-lg">
            <div class="absolute inset-0 flex items-center">
              <div class="w-full border-t border-neutral-200"></div>
            </div>
            <div class="relative flex justify-center text-sm">
              <span class="px-sm bg-white text-neutral-500">Or continue with email</span>
            </div>
          </div>

          <!-- Signup Form -->
          <form @submit="handleSignup" class="space-y-md">
            <!-- Name Fields -->
            <div class="grid grid-cols-2 gap-md">
              <div class="form-group">
                <label for="firstName" class="form-label">First name</label>
                <input
                  type="text"
                  id="firstName"
                  name="firstName"
                  :value="form.firstName"
                  @input="form.firstName = $event.target.value"
                  class="form-input"
                  placeholder="John"
                  required
                  autocomplete="given-name"
                >
                <div class="form-error" :if="errors.firstName">{errors.firstName}</div>
              </div>

              <div class="form-group">
                <label for="lastName" class="form-label">Last name</label>
                <input
                  type="text"
                  id="lastName"
                  name="lastName"
                  :value="form.lastName"
                  @input="form.lastName = $event.target.value"
                  class="form-input"
                  placeholder="Doe"
                  required
                  autocomplete="family-name"
                >
                <div class="form-error" :if="errors.lastName">{errors.lastName}</div>
              </div>
            </div>

            <!-- Email -->
            <div class="form-group">
              <label for="email" class="form-label">Email address</label>
              <input
                type="email"
                id="email"
                name="email"
                :value="form.email"
                @input="form.email = $event.target.value"
                class="form-input"
                placeholder="you@example.com"
                required
                autocomplete="email"
              >
              <div class="form-error" :if="errors.email">{errors.email}</div>
            </div>

            <!-- Company (optional) -->
            <div class="form-group">
              <label for="company" class="form-label">
                Company name
                <span class="text-neutral-500">(optional)</span>
              </label>
              <input
                type="text"
                id="company"
                name="company"
                :value="form.company"
                @input="form.company = $event.target.value"
                class="form-input"
                placeholder="Acme Corp"
                autocomplete="organization"
              >
            </div>

            <!-- Password -->
            <div class="form-group">
              <label for="password" class="form-label">Password</label>
              <div class="relative">
                <input
                  :type="showPassword ? 'text' : 'password'"
                  id="password"
                  name="password"
                  :value="form.password"
                  @input="form.password = $event.target.value"
                  class="form-input pr-lg"
                  placeholder="Create a strong password"
                  required
                  autocomplete="new-password"
                >
                <button
                  type="button"
                  @click="showPassword = !showPassword"
                  class="absolute right-sm top-1/2 transform -translate-y-1/2 text-neutral-500 hover:text-neutral-700"
                >
                  <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" :if="!showPassword">
                    <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"/>
                    <circle cx="12" cy="12" r="3"/>
                  </svg>
                  <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" :else>
                    <path d="M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24"/>
                    <line x1="1" y1="1" x2="23" y2="23"/>
                  </svg>
                </button>
              </div>
              
              <!-- Password strength indicator -->
              <div class="mt-xs">
                <div class="flex gap-xs">
                  <div class="h-1 flex-1 rounded-full" :class="passwordStrength >= 1 ? 'bg-error-500' : 'bg-neutral-200'"></div>
                  <div class="h-1 flex-1 rounded-full" :class="passwordStrength >= 2 ? 'bg-warning-500' : 'bg-neutral-200'"></div>
                  <div class="h-1 flex-1 rounded-full" :class="passwordStrength >= 3 ? 'bg-warning-500' : 'bg-neutral-200'"></div>
                  <div class="h-1 flex-1 rounded-full" :class="passwordStrength >= 4 ? 'bg-success-500' : 'bg-neutral-200'"></div>
                </div>
                <p class="text-xs mt-xs" :class="passwordStrengthColor">
                  {passwordStrengthText}
                </p>
              </div>
              
              <div class="form-error" :if="errors.password">{errors.password}</div>
            </div>

            <!-- Confirm Password -->
            <div class="form-group">
              <label for="confirmPassword" class="form-label">Confirm password</label>
              <input
                type="password"
                id="confirmPassword"
                name="confirmPassword"
                :value="form.confirmPassword"
                @input="form.confirmPassword = $event.target.value"
                class="form-input"
                placeholder="Confirm your password"
                required
                autocomplete="new-password"
              >
              <div class="form-error" :if="errors.confirmPassword">{errors.confirmPassword}</div>
            </div>

            <!-- Terms and Marketing -->
            <div class="space-y-sm">
              <label class="flex items-start gap-xs">
                <input
                  type="checkbox"
                  class="form-checkbox mt-xs"
                  :checked="form.agreeTerms"
                  @change="form.agreeTerms = $event.target.checked"
                  required
                >
                <span class="text-sm text-neutral-700">
                  I agree to the
                  <a href="/terms" class="text-primary-600 hover:text-primary-700">Terms of Service</a>
                  and
                  <a href="/privacy" class="text-primary-600 hover:text-primary-700">Privacy Policy</a>
                </span>
              </label>

              <label class="flex items-start gap-xs">
                <input
                  type="checkbox"
                  class="form-checkbox mt-xs"
                  :checked="form.agreeMarketing"
                  @change="form.agreeMarketing = $event.target.checked"
                >
                <span class="text-sm text-neutral-700">
                  I'd like to receive updates about new features and special offers
                </span>
              </label>
            </div>

            <!-- Error message -->
            <div class="alert alert-error" :if="signupError">
              <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor">
                <circle cx="12" cy="12" r="10"/>
                <line x1="15" y1="9" x2="9" y2="15"/>
                <line x1="9" y1="9" x2="15" y2="15"/>
              </svg>
              <span>{signupError}</span>
            </div>

            <!-- Submit button -->
            <button type="submit" class="btn btn-primary btn-full" :disabled="isLoading || !form.agreeTerms">
              <span :if="!isLoading">Create Account</span>
              <span :else class="flex items-center gap-xs">
                <div class="loading"></div>
                Creating account...
              </span>
            </button>
          </form>
        </div>
      </div>

      <!-- Sign in link -->
      <div class="text-center mt-lg">
        <p class="text-neutral-600">
          Already have an account?
          <a href="/login" class="text-primary-600 hover:text-primary-700 font-medium">
            Sign in
          </a>
        </p>
      </div>
    </div>
  </div>
</section>

<script>
  // Get plan from URL parameters
  const urlParams = new URLSearchParams(window.location.search)
  const planParam = urlParams.get('plan')
  
  // Plan configurations
  const plans = {
    starter: { name: 'Starter', price: '$29', description: 'Perfect for small projects and startups' },
    pro: { name: 'Pro', price: '$79', description: 'Best for growing businesses' },
    enterprise: { name: 'Enterprise', price: 'Custom', description: 'For large scale applications' }
  }
  
  const selectedPlan = planParam ? plans[planParam] : null

  // Signup form state
  const form = {
    firstName: '',
    lastName: '',
    email: '',
    company: '',
    password: '',
    confirmPassword: '',
    agreeTerms: false,
    agreeMarketing: false
  }

  const errors = {}
  let isLoading = false
  let signupError = ''
  let showPassword = false
  let passwordStrength = 0
  let passwordStrengthText = 'Enter a password'
  let passwordStrengthColor = 'text-neutral-500'

  // Watch password for strength calculation
  function updatePasswordStrength() {
    const password = form.password
    let strength = 0
    
    if (password.length >= 8) strength++
    if (/[A-Z]/.test(password)) strength++
    if (/[a-z]/.test(password)) strength++
    if (/[0-9]/.test(password)) strength++
    if (/[^A-Za-z0-9]/.test(password)) strength++
    
    passwordStrength = Math.min(strength, 4)
    
    switch (passwordStrength) {
      case 0:
      case 1:
        passwordStrengthText = 'Very weak'
        passwordStrengthColor = 'text-error-500'
        break
      case 2:
        passwordStrengthText = 'Weak'
        passwordStrengthColor = 'text-warning-500'
        break
      case 3:
        passwordStrengthText = 'Good'
        passwordStrengthColor = 'text-warning-500'
        break
      case 4:
        passwordStrengthText = 'Strong'
        passwordStrengthColor = 'text-success-500'
        break
    }
  }

  // Watch for password changes
  const originalPasswordInput = form.password
  Object.defineProperty(form, 'password', {
    get() { return originalPasswordInput },
    set(value) {
      originalPasswordInput = value
      updatePasswordStrength()
    }
  })

  // Handle form submission
  function handleSignup(event) {
    event.preventDefault()
    
    // Clear previous errors
    Object.keys(errors).forEach(key => delete errors[key])
    signupError = ''
    
    // Validation
    if (!form.firstName.trim()) {
      errors.firstName = 'First name is required'
    }
    
    if (!form.lastName.trim()) {
      errors.lastName = 'Last name is required'
    }
    
    if (!form.email) {
      errors.email = 'Email is required'
    } else if (!form.email.includes('@')) {
      errors.email = 'Please enter a valid email address'
    }
    
    if (!form.password) {
      errors.password = 'Password is required'
    } else if (form.password.length < 8) {
      errors.password = 'Password must be at least 8 characters'
    } else if (passwordStrength < 2) {
      errors.password = 'Please choose a stronger password'
    }
    
    if (!form.confirmPassword) {
      errors.confirmPassword = 'Please confirm your password'
    } else if (form.password !== form.confirmPassword) {
      errors.confirmPassword = 'Passwords do not match'
    }
    
    if (!form.agreeTerms) {
      signupError = 'You must agree to the Terms of Service to continue'
      return
    }
    
    // Check if there are any errors
    if (Object.keys(errors).length > 0) {
      return
    }
    
    // Simulate signup
    isLoading = true
    
    // Mock API call
    setTimeout(() => {
      // Simulate success
      window.location.href = '/dashboard?welcome=true'
    }, 2000)
  }

  // Social signup handlers
  function signupWithGoogle() {
    // Implement Google OAuth
    console.log('Signup with Google')
  }

  function signupWithGitHub() {
    // Implement GitHub OAuth
    console.log('Signup with GitHub')
  }
</script>